package @Package@;

import art.redoc.core.conts.CoreResponseCode;
import art.redoc.core.exceptions.CoreRuntimeException;
import lombok.NonNull;
import lombok.extern.slf4j.Slf4j;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.stereotype.Service;

import @ModelPath@;
import @RepositoryPath@;
import @ServicePath@;

import java.util.List;

/**
 * @Model@Service 实现类
 */
@Slf4j
@Service
public class @Model@ServiceImpl implements @Model@Service {

    @Autowired
    private @Model@Repository @model@Repository;

    @Override
    public @Model@ get(@NonNull @IDType@ id) {
        final @Model@ model = @model@Repository.findById(id).orElseThrow(()->
                new CoreRuntimeException(CoreResponseCode.RESOURCE_NOT_EXISTS, String.format("id为[%s]资源不存在", id)));
        return model;
    }

    @Override
    public Page<@Model@> getAll(Pageable pageable) {
        return this.@model@Repository.findAll(pageable);
    }

    @Override
    public @Model@ create(@Model@ model) {
        return @model@Repository.save(model);
    }

    @Override
    public List<@Model@> create(List<@Model@> models) {
        return @model@Repository.saveAll(models);
    }

    @Override
    public @Model@ update(@Model@ model) {
        return @model@Repository.save(model);
    }

    @Override
    public void delete(@NonNull @IDType@ id) {
        @model@Repository.deleteById(id);
    }

    @Override
    public void delete(List<@Model@> models) {
        @model@Repository.deleteInBatch(models);
    }
}
